version: 2
jobs:
  build-debug-apk:
    docker:
      - image: circleci/android:api-28-alpha
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build APK
          command: ./gradlew assembleDebug --info --stacktrace
      - store_artifacts:
          path: app/build/outputs
          destination: outputs
      - run:
          name: Archive files to deploy
          command: |
            tar cvf source.tar app/build/outputs/apk/
      - save_cache:
          key: source-{{ .Revision }}
          paths: source.tar
  upload-to-appetize:
    docker:
      - image: circleci/node:10
    working_directory: ~/project
    steps:
      - restore_cache:
          key: source-{{ .Revision }}
      - run:
          name: Extract the archive
          command: tar xvf source.tar
      - run:
          name: Install appetize-cli
          command: |
            wget https://github.com/YusukeIwaki/appetize-cli/releases/download/v1.1.1/appetize_linux_amd64 -O appetize
            chmod 755 appetize
            mkdir logs/
      - run:
          name: Upload apk to appetize.io
          command: ./appetize upload app/build/outputs/apk/debug/app-debug.apk --platform=android | tee logs/appetize-upload.log
      - store_artifacts:
          path: logs/
          destination: logs

workflows:
  version: 2
  normal-build:
    jobs:
      - build-debug-apk
      - upload-to-appetize:
          requires:
            - build-debug-apk
